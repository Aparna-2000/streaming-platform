{"ast":null,"code":"var _jsxFileName = \"/Users/aparnar/CascadeProjects/streaming-platform/frontend/src/components/LoginTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField, Box, Typography, Paper, Alert } from '@mui/material';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginTest = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleTestLogin = async () => {\n    setLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      console.log('Testing login with:', {\n        username,\n        password\n      });\n      const response = await authService.login({\n        username,\n        password\n      });\n      console.log('Login response:', response);\n      if (response.success) {\n        var _response$data, _response$data2;\n        setResult({\n          success: true,\n          message: 'Login successful!',\n          user: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user,\n          token: (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.accessToken ? 'Token received' : 'No token received'\n        });\n\n        // Test getting current user\n        const currentUser = authService.getCurrentUser();\n        console.log('Current user:', currentUser);\n\n        // Test isAuthenticated\n        const isAuthed = authService.isAuthenticated();\n        console.log('Is authenticated:', isAuthed);\n\n        // Test protected route\n        try {\n          // This will likely fail since we don't have a real backend\n          // await axios.get('/protected-route');\n        } catch (err) {\n          console.log('Protected route error (expected):', err);\n        }\n\n        // Test logout\n        await authService.logout();\n        console.log('After logout - Is authenticated:', authService.isAuthenticated());\n      } else {\n        setResult({\n          success: false,\n          message: response.message || 'Login failed',\n          details: response\n        });\n      }\n    } catch (err) {\n      console.error('Test error:', err);\n      setError(err.message || 'An error occurred during testing');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 600,\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Login Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleTestLogin,\n          disabled: loading,\n          sx: {\n            mt: 2\n          },\n          children: loading ? 'Testing...' : 'Test Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: result.success ? 'success.main' : 'error.main',\n          gutterBottom: true,\n          children: result.success ? '✅ Test Passed' : '❌ Test Failed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), result.details && /*#__PURE__*/_jsxDEV(Box, {\n          component: \"pre\",\n          sx: {\n            p: 2,\n            bgcolor: 'grey.100',\n            borderRadius: 1,\n            overflowX: 'auto',\n            mt: 2\n          },\n          children: JSON.stringify(result.details, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginTest, \"WTXiCHmYtcTPGNDtxMIgFh6LrX4=\");\n_c = LoginTest;\nexport default LoginTest;\nvar _c;\n$RefreshReg$(_c, \"LoginTest\");","map":{"version":3,"names":["React","useState","Button","TextField","Box","Typography","Paper","Alert","authService","jsxDEV","_jsxDEV","LoginTest","_s","username","setUsername","password","setPassword","loading","setLoading","result","setResult","error","setError","handleTestLogin","console","log","response","login","success","_response$data","_response$data2","message","user","data","token","accessToken","currentUser","getCurrentUser","isAuthed","isAuthenticated","err","logout","details","sx","p","maxWidth","margin","children","elevation","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","label","value","onChange","e","target","fullWidth","type","color","onClick","disabled","mt","severity","component","bgcolor","borderRadius","overflowX","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/aparnar/CascadeProjects/streaming-platform/frontend/src/components/LoginTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, TextField, Box, Typography, Paper, Alert } from '@mui/material';\nimport { authService } from '../services/api';\n\nconst LoginTest: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<any>(null);\n  const [error, setError] = useState<string>('');\n\n  const handleTestLogin = async () => {\n    setLoading(true);\n    setError('');\n    setResult(null);\n\n    try {\n      console.log('Testing login with:', { username, password });\n      const response = await authService.login({ username, password });\n      console.log('Login response:', response);\n      \n      if (response.success) {\n        setResult({\n          success: true,\n          message: 'Login successful!',\n          user: response.data?.user,\n          token: response.data?.accessToken ? 'Token received' : 'No token received'\n        });\n        \n        // Test getting current user\n        const currentUser = authService.getCurrentUser();\n        console.log('Current user:', currentUser);\n        \n        // Test isAuthenticated\n        const isAuthed = authService.isAuthenticated();\n        console.log('Is authenticated:', isAuthed);\n        \n        // Test protected route\n        try {\n          // This will likely fail since we don't have a real backend\n          // await axios.get('/protected-route');\n        } catch (err) {\n          console.log('Protected route error (expected):', err);\n        }\n        \n        // Test logout\n        await authService.logout();\n        console.log('After logout - Is authenticated:', authService.isAuthenticated());\n      } else {\n        setResult({\n          success: false,\n          message: response.message || 'Login failed',\n          details: response\n        });\n      }\n    } catch (err: any) {\n      console.error('Test error:', err);\n      setError(err.message || 'An error occurred during testing');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 600, margin: '0 auto' }}>\n      <Paper elevation={3} sx={{ p: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Login Test\n        </Typography>\n        \n        <Box sx={{ mb: 3 }}>\n          <TextField\n            label=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleTestLogin}\n            disabled={loading}\n            sx={{ mt: 2 }}\n          >\n            {loading ? 'Testing...' : 'Test Login'}\n          </Button>\n        </Box>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {result && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"h6\" color={result.success ? 'success.main' : 'error.main'} gutterBottom>\n              {result.success ? '✅ Test Passed' : '❌ Test Failed'}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              {result.message}\n            </Typography>\n            {result.details && (\n              <Box component=\"pre\" sx={{ \n                p: 2, \n                bgcolor: 'grey.100', \n                borderRadius: 1, \n                overflowX: 'auto',\n                mt: 2\n              }}>\n                {JSON.stringify(result.details, null, 2)}\n              </Box>\n            )}\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default LoginTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,QAAQ,eAAe;AAChF,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAM,IAAI,CAAC;EAC/C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMsB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCL,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,IAAI,CAAC;IAEf,IAAI;MACFI,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;QAAEZ,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC1D,MAAMW,QAAQ,GAAG,MAAMlB,WAAW,CAACmB,KAAK,CAAC;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAChES,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAAC;MAExC,IAAIA,QAAQ,CAACE,OAAO,EAAE;QAAA,IAAAC,cAAA,EAAAC,eAAA;QACpBV,SAAS,CAAC;UACRQ,OAAO,EAAE,IAAI;UACbG,OAAO,EAAE,mBAAmB;UAC5BC,IAAI,GAAAH,cAAA,GAAEH,QAAQ,CAACO,IAAI,cAAAJ,cAAA,uBAAbA,cAAA,CAAeG,IAAI;UACzBE,KAAK,EAAE,CAAAJ,eAAA,GAAAJ,QAAQ,CAACO,IAAI,cAAAH,eAAA,eAAbA,eAAA,CAAeK,WAAW,GAAG,gBAAgB,GAAG;QACzD,CAAC,CAAC;;QAEF;QACA,MAAMC,WAAW,GAAG5B,WAAW,CAAC6B,cAAc,CAAC,CAAC;QAChDb,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,WAAW,CAAC;;QAEzC;QACA,MAAME,QAAQ,GAAG9B,WAAW,CAAC+B,eAAe,CAAC,CAAC;QAC9Cf,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEa,QAAQ,CAAC;;QAE1C;QACA,IAAI;UACF;UACA;QAAA,CACD,CAAC,OAAOE,GAAG,EAAE;UACZhB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEe,GAAG,CAAC;QACvD;;QAEA;QACA,MAAMhC,WAAW,CAACiC,MAAM,CAAC,CAAC;QAC1BjB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEjB,WAAW,CAAC+B,eAAe,CAAC,CAAC,CAAC;MAChF,CAAC,MAAM;QACLnB,SAAS,CAAC;UACRQ,OAAO,EAAE,KAAK;UACdG,OAAO,EAAEL,QAAQ,CAACK,OAAO,IAAI,cAAc;UAC3CW,OAAO,EAAEhB;QACX,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOc,GAAQ,EAAE;MACjBhB,OAAO,CAACH,KAAK,CAAC,aAAa,EAAEmB,GAAG,CAAC;MACjClB,QAAQ,CAACkB,GAAG,CAACT,OAAO,IAAI,kCAAkC,CAAC;IAC7D,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA,CAACN,GAAG;IAACuC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,eACjDrC,OAAA,CAACJ,KAAK;MAAC0C,SAAS,EAAE,CAAE;MAACL,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAG,QAAA,gBAChCrC,OAAA,CAACL,UAAU;QAAC4C,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAH,QAAA,EAAC;MAEtC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEb5C,OAAA,CAACN,GAAG;QAACuC,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAR,QAAA,gBACjBrC,OAAA,CAACP,SAAS;UACRqD,KAAK,EAAC,UAAU;UAChBC,KAAK,EAAE5C,QAAS;UAChB6C,QAAQ,EAAGC,CAAC,IAAK7C,WAAW,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,SAAS;UACTf,MAAM,EAAC,QAAQ;UACfG,OAAO,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACF5C,OAAA,CAACP,SAAS;UACRqD,KAAK,EAAC,UAAU;UAChBM,IAAI,EAAC,UAAU;UACfL,KAAK,EAAE1C,QAAS;UAChB2C,QAAQ,EAAGC,CAAC,IAAK3C,WAAW,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,SAAS;UACTf,MAAM,EAAC,QAAQ;UACfG,OAAO,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACF5C,OAAA,CAACR,MAAM;UACL+C,OAAO,EAAC,WAAW;UACnBc,KAAK,EAAC,SAAS;UACfC,OAAO,EAAEzC,eAAgB;UACzB0C,QAAQ,EAAEhD,OAAQ;UAClB0B,EAAE,EAAE;YAAEuB,EAAE,EAAE;UAAE,CAAE;UAAAnB,QAAA,EAEb9B,OAAO,GAAG,YAAY,GAAG;QAAY;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELjC,KAAK,iBACJX,OAAA,CAACH,KAAK;QAAC4D,QAAQ,EAAC,OAAO;QAACxB,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAR,QAAA,EACnC1B;MAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,EAEAnC,MAAM,iBACLT,OAAA,CAACN,GAAG;QAACuC,EAAE,EAAE;UAAEuB,EAAE,EAAE;QAAE,CAAE;QAAAnB,QAAA,gBACjBrC,OAAA,CAACL,UAAU;UAAC4C,OAAO,EAAC,IAAI;UAACc,KAAK,EAAE5C,MAAM,CAACS,OAAO,GAAG,cAAc,GAAG,YAAa;UAACsB,YAAY;UAAAH,QAAA,EACzF5B,MAAM,CAACS,OAAO,GAAG,eAAe,GAAG;QAAe;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACb5C,OAAA,CAACL,UAAU;UAAC4C,OAAO,EAAC,OAAO;UAACC,YAAY;UAAAH,QAAA,EACrC5B,MAAM,CAACY;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACZnC,MAAM,CAACuB,OAAO,iBACbhC,OAAA,CAACN,GAAG;UAACgE,SAAS,EAAC,KAAK;UAACzB,EAAE,EAAE;YACvBC,CAAC,EAAE,CAAC;YACJyB,OAAO,EAAE,UAAU;YACnBC,YAAY,EAAE,CAAC;YACfC,SAAS,EAAE,MAAM;YACjBL,EAAE,EAAE;UACN,CAAE;UAAAnB,QAAA,EACCyB,IAAI,CAACC,SAAS,CAACtD,MAAM,CAACuB,OAAO,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC1C,EAAA,CA7HID,SAAmB;AAAA+D,EAAA,GAAnB/D,SAAmB;AA+HzB,eAAeA,SAAS;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}